Basic Operations

Concurrency / Thread Safety
 Concurrent pushLeft and pushRight (from multiple threads)
 Concurrent popLeft and popRight
 Concurrent removeNode and pop operations
 Concurrent mixed operations (all operations from all ends)
 High contention scenarios (many threads, rapid insertion/removal)
 ABA problem (node reuse from memory pool; ensure no stale pointers)
 Correctness under thread preemption (simulate yielding at critical points)

Edge Cases and Robustness
 Popping until empty (repeatedly pop until the deque is empty)
 Removing until empty
 Removing/popping after all nodes are removed (should handle gracefully)
 Interleaved pushes and pops (randomized order)
 Stress test with large number of elements
 Stress test with rapid allocation and deallocation (memory pool exhaustion)
 Correct order preservation (FIFO/LIFO as appropriate for each operation)
 Stress with all operations and memory pool at maximum capacity

API Contract
 Returned nodes/data are correct
 After pop or remove, node is not accessible from the queue
 Attempting to interact with an already removed node does not break anything